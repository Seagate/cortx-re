#!/usr/bin/env groovy
pipeline {
    agent {
        node {
            label 'github-automation'
        }
    }
    parameters {
        string(name: 'BUILD_URL', defaultValue: 'http://cortx-storage.colo.seagate.com/releases/opensource_builds/ova_builds/centos-7.8.2003/ova-build-21/', description: 'CORTX release build url.')
        string(name: 'HOST', description: 'IP address of VM deploy host')
        string(name: 'VSPHERE_VM_NAME', defaultValue: 'ova-test-3', description: 'Name of VM deploy host')
        string(name: 'VSPHERE_VM_SNAPSHOT_NAME', defaultValue: 'ova-test-3-snap', description: 'Snapshot name of VM deploy host')
    }
    environment {
        DEPLOYMENT_HOST_SSH_KEY = credentials('gaurav_dev_vm_sshkey')
        NODE_SSH_PASS = credentials('cortx_test_root')
        VSPHERE_HOSTNAME = "10.230.240.78"
    }
    options {
        timestamps()
        ansiColor('xterm')
        buildDiscarder(logRotator(numToKeepStr: "30"))
    }
    stages {
        stage('Checkout') {
            steps {
                script{
                    dir('cortx-re') {
                        checkout([$class: 'GitSCM',
                            branches: [[name: '*/main']],
                            doGenerateSubmoduleConfigurations: false,
                            extensions: [],
                            submoduleCfg: [],
                            userRemoteConfigs: [[credentialsId: 'github-access', url: 'https://github.com/Seagate/cortx-re']]

                        ])
                    }
                }
            }
        }
        stage('Revert VM to base image') {
            steps {
                script {
                                        executeAnsiblePlaybook("snapshot-revert")
                                }
            }
        }
        stage('SSH Setup') {
            steps {
                script {
                                        executeAnsiblePlaybook("ssh-setup")
                                }
            }
        }
        stage('CORTX setup on VM') {
            steps {
                script {
                                        executeAnsiblePlaybook("install-cortx")
                                }
            }
        }
        stage('Build OVA') {
            steps {
                script {
                                        executeAnsiblePlaybook("ovabuild")
                                }
            }
        }
    }
}

def executeAnsiblePlaybook(tags) {
    withCredentials([usernamePassword(credentialsId: 'gaurav_vsphere_creds', passwordVariable: 'VSPHERE_PASSWORD', usernameVariable: 'VSPHERE_USERNAME'), usernamePassword(credentialsId: 'cortx_test_setup_creds', passwordVariable: 'TEST_PASS', usernameVariable: 'TEST_USER')]) {

        dir('cortx-re/scripts/ova-release') {
            ansiblePlaybook(
                playbook: 'cortx_ova_release.yml',
                inventory: 'inventories/development/hosts',
                tags: "${tags}",
                extraVars: [
                        "BUILD_URL"                 : [value: "${BUILD_URL}", hidden: false],
                        "ansible_host"              : [value: "${HOST}", hidden: false],
                        "DEPLOYMENT_HOST_SSH_KEY"   : [value: "${DEPLOYMENT_HOST_SSH_KEY}", hidden: true],
                        "NODE_SSH_PASS"             : [value: "${NODE_SSH_PASS}", hidden: true],
                        "VSPHERE_VM_NAME"           : [value: "${VSPHERE_VM_NAME}", hidden: false],
                        "VSPHERE_VM_SNAPSHOT_NAME"  : [value: "${VSPHERE_VM_SNAPSHOT_NAME}", hidden: false],
                        "VSPHERE_HOSTNAME"          : [value: "${VSPHERE_HOSTNAME}", hidden: true],
                        "VSPHERE_PASSWORD"          : [value: "${VSPHERE_PASSWORD}", hidden: true],
                        "VSPHERE_USERNAME"          : [value: "${VSPHERE_USERNAME}", hidden: true],
                        "TEST_PASS"                 : [value: "${TEST_PASS}", hidden: true],
                        "TEST_USER"                 : [value: "${TEST_USER}", hidden: true],
                ],
                colorized: true
            )
        }
    }
}

