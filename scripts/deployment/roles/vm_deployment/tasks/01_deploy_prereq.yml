---

- name: "[ Pre-Validation ] : Check node SSH connection status"
  shell: "echo '{{ item }} : SSH Connection Ok'"
  delegate_to: "{{ item }}"
  with_items: "{{ groups['srvnodes'] }}"

- set_fact:
    REQUIRED_HOST: "{% if SETUP_TYPE=='single' %}1{% elif SETUP_TYPE=='3_node'%}3{% else %}1{% endif %}"
    REQUIRED_DEVICES:  "{% if SETUP_TYPE=='single' %}2{% elif SETUP_TYPE=='3_node'%}6{% else %}2{% endif %}"

- name: "[ Pre-Validation ] : Validate the input arguments"
  fail: msg="Provided Host count not matching with setup type"
  when: "REQUIRED_HOST|int !=  HOST.count(',') + 1" 

- name: "[ Pre-Validation ] : Check VM has required number of disks"
  shell: "test {{ REQUIRED_DEVICES }} -le $(lsblk -nd -o NAME -e 11|grep -v sda|wc -l)"
  delegate_to: "{{ item }}"
  with_items: "{{ groups['srvnodes'] }}"

- name: "[ Pre-Validation ] : Check node provided in clean state"
  shell: |
    for folder in "/var/log/seagate" "/opt/seagate";
    do
        if [[ ! -d "${folder}" ]]; then
            echo "OK - Folder does not exists ( ${folder} )";
        else 
            echo "NOT_OK - Folder exists ${folder}";
            exit 1
        fi
    done
    if [[ ! $(yum list installed | grep "cortx") ]]; then
        echo "OK - System in clean state no cortx component installed";
    else
        echo "NOT_OK - Cortx component already installed";
        exit 1
    fi 
  delegate_to: "{{ item }}"
  with_items: "{{ groups['srvnodes'] }}"
  ignore_errors: true
  
- name: "[ Deploy Prerequisite ] : Install Prereq tools & Provisioner API (Async)"
  shell: |
    CORTX_RELEASE_REPO="{{ CORTX_BUILD }}"

    yum install -y yum-utils
    yum-config-manager --add-repo "${CORTX_RELEASE_REPO}/3rd_party/"
    yum-config-manager --add-repo "${CORTX_RELEASE_REPO}/cortx_iso/"

    cat <<EOF >/etc/pip.conf
    [global]
    timeout: 60
    index-url: $CORTX_RELEASE_REPO/python_deps/
    trusted-host: $(echo $CORTX_RELEASE_REPO | awk -F '/' '{print $3}')
    EOF

    # Cortx Pre-requisites
    yum install --nogpgcheck -y java-1.8.0-openjdk-headless
    yum install --nogpgcheck -y python3 cortx-prereq sshpass
    # Pre-reqs for Provisioner
    yum install --nogpgcheck -y python36-m2crypto salt salt-master salt-minion
    # Provisioner API
    yum install --nogpgcheck -y python36-cortx-prvsnr

    # Cleanup temporary repos
    rm -rf /etc/yum.repos.d/*3rd_party*.repo
    rm -rf /etc/yum.repos.d/*cortx_iso*.repo
    yum clean all
    rm -rf /var/cache/yum/
    rm -rf /etc/pip.conf
  async: 6000
  poll: 0
  register: cortx_deploy_prereq_async
  delegate_to: "{{ item }}"
  with_items: "{{ groups['srvnodes'] }}"

- name: "[ Deploy Prerequisite ] : Wait for Async job to complete"
  async_status:
    jid: "{{  cortx_deploy_prereq_async['results'][item.0]['ansible_job_id'] }}"
  register: job_result
  until: job_result.finished
  retries: 30
  delay: 30
  delegate_to: "{{ item.1 }}"
  with_indexed_items: "{{ groups['srvnodes'] }}"

- name: "[ Deploy Prerequisite ] : Create Log Dir"
  shell: |
    mkdir -p /root/cortx_deployment/script
    mkdir -p /root/cortx_deployment/log
    mkdir -p /root/cortx_deployment/config
