
# #######################################################################################
# Description:
#-------------
#         This tasks starts s3server and motr for I/O
# Reference:
#----------- 
#         https://github.com/Seagate/cortx-s3server/wiki/S3server-provisioning-on-single-node-cluster:-Manual#start-s3server-and-motr-for-io
# Steps:
#--------
#      1. Install Hare    
#      2. Set hostname as node name
#      3. Create virtual devices
#      4. Configure lnet
#      5. Create CDF file: /tmp/singlenode.yaml
#      6. bootstrap hctl
#      7. Check status
#      8. Start s3authserver
#
##########################################################################################

# Add consul repo
- name: "[start_s3server] : Add consul repository"
  shell: yum-config-manager --add-repo {{ CONSUL_REPO }}

# Install consul
- name: "[start_s3server] : Install consul-1.7.8"
  yum: 
    name: consul-1.7.8
    state: present

# Install Hare
- name: "[start_s3server] : Install hare"
  yum: 
    name: cortx-hare
    state: present

# Set nodename
- name: "[start_s3server] : Set nodename"
  shell: hostname > /var/lib/hare/node-name

# Create virtual devices
- name: "[start_s3server] : Create virtual devices"
  shell: m0setup

# Configure lnet
- name: "[start_s3server] : Copy lnet conf"
  copy:
      src: files/lnet.conf
      dest: /etc/modprobe.d/lnet.conf
      owner: root
      group: root
      mode: '0755'

# Start Lnet
- name: "[start_s3server] : Start lnet"
  ansible.builtin.service:
    name: lnet
    state: started

# Get Hostname
- name: "[install_s3server] : Get hostname" 
  shell: hostname
  register: hostname_out
  become: true

- set_fact:
    HOSTNAME: "{{ hostname_out.stdout }}"

# Create CDF file: /tmp/singlenode.yml
- name: "[start_s3server] : Copy cdf file"
  template:
    src: singlenode.yml.j2
    dest: /tmp/singlenode.yml

# Bootstrap hctl
- name: "[start_s3server] : Bootstrap hctl"
  shell: hctl bootstrap --mkfs /tmp/singlenode.yml

# Restart s3authserver
- name: "[start_s3server] : Restart s3authserver"
  ansible.builtin.service:
    name: s3authserver
    state: restarted

# Start s3backgroundproducer
- name: "[start_s3server] : Start s3backgroundproducer"
  ansible.builtin.service:
    name: s3backgroundproducer
    state: started

# Start s3backgroundconsumer
- name: "[start_s3server] : Start s3backgroundconsumer"
  ansible.builtin.service:
    name: s3backgroundconsumer
    state: started

# Install s3iamcli
- name: "[start_s3server] : Install s3iamcli"
  yum: 
    name: cortx-s3iamcli
    state: present