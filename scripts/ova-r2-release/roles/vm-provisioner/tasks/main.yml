---
- name: Run pre-checks
  include_tasks: pre-checks.yml

- name: Install dependency packages
  yum:
    name:
      - git
      - firewalld-0.6.3-8.el7
      - python3
      - expect
    state: present

- name: Copy a config file
  template:
    src: config.ini.j2
    dest: ~/config.ini
    owner: root
    group: root
    mode: '0644'

- name: Copy a autodeploy execution script
  template:
    src: script.j2
    dest: ~/script
    owner: root
    group: root
    mode: '0750'

- name: Copy provisioner script
  copy:
    src: files/provisioner.sh
    dest: provisioner.sh
    owner: root
    group: root
    mode: '0754'

- name: Check /etc/hosts file data
  shell: "cat /etc/hosts"
  register: hostsdata
  
- name: Display /etc/hosts file data
  debug:
    msg: "{{ hostsdata }}"
    
- name: Execute provisioner script
  script: "files/provisioner.sh {{ BUILD_URL }}"
  register: command_result
  failed_when: "'ERROR' in command_result.stdout"

#s3server fix
- name: Edit s3 config file
  shell: "sed -i 's/S3_MOTR_MAX_UNITS_PER_REQUEST: 32/S3_MOTR_MAX_UNITS_PER_REQUEST: 8/g' /opt/seagate/cortx/s3/conf/s3config.yaml"

- name: Restart s3 service
  shell: systemctl restart s3server@*

- name: Start cluster
  shell: "cortx cluster start"

- name: Close port on management interface
  shell: firewall-cmd --zone=public --remove-port=443/tcp --permanent

- name: open port on management interface
  shell: "{{ item }}"
  with_items:
    - "salt '*' cmd.run 'firewall-cmd --zone=public-data-zone --add-port=80/tcp --permanent'"
    - "salt '*' cmd.run 'firewall-cmd --zone=public-data-zone --add-port=28100/tcp --permanent'"
    - "salt '*' cmd.run 'firewall-cmd --reload'"

- name: Install vmware-tools
  yum: name=open-vm-tools state=present

- name: Check database.yml file data
  shell: "cat /etc/csm/database.yaml"
  register: firstdbresult

- name: Print db data
  debug:
    msg: "{{ firstdbresult }}"
 
- include_role:
    name: vm-service-checker 
 
- name: Change hostname
  shell: "hostnamectl set-hostname --static --transient --pretty localhost"

- name: Delete horizontal line in hosts file
  lineinfile:
    path: /etc/hosts
    state: absent
    regexp: '^--'

- name: Cleanup yum repo files
  file:
    path: /etc/yum.repos.d/*.repo 
    state: absent

- name: Clean bash history
  shell: cat /dev/null > /root/.bash_history

- name: Check /etc/hosts file data
  shell: "cat /etc/hosts"
  register: sechostsdata

- name: Check database.yml file data
  shell: "cat /etc/csm/database.yaml"
  register: dbconfig
  
- name: Check ip addresses
  shell: "ip a"
  register: ipaddrinfo

- name: Display hosts file contents, db config and ip information
  debug:
    msg: "{{ item }}"
  with_items:
    - "{{ sechostsdata }}"
    - "{{ dbconfig }}"
    - "{{ ipaddrinfo }}"

- name: Remove provisioner setup files
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "/root/script"
    - "/root/provisioner.sh"

- name: Remove a new host in hosts file
  lineinfile:
    path: /etc/hosts
    state: absent
    line: "{{ ansible_default_ipv4.address }} {{ OVA_HOSTNAME }}"
